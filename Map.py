import pygame as pg

#   WALL         [1]*64,
#   SPACE        [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1],

_ = False

MAP=[
    [1]*64,
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,2,2,2,2,2,2,2,2],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,_,_,_,_,_,_,2],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,_,_,1,_,_,_,2],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,_,_,1,_,_,_,2],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,_,_,1,_,_,_,2],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,_,_,_,_,_,_,2],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,_,_,1,_,_,_,2],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,_,_,_,_,_,_,2],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,3,3,3,3,3,3,3,3,3,3,_,3],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,3,_,_,_,_,_,_,_,_,_,_,3],
    [1,_,_,_,_,_,_,_,_,_,4,4,_,4,4,4,4,4,_,4,4,3,_,_,_,_,_,_,_,_,_,3],
    [1,_,_,_,_,_,_,_,_,_,4,_,_,_,_,_,_,_,_,_,4,3,_,_,_,2,2,2,_,_,_,3],
    [1,_,_,_,_,_,_,_,_,_,4,_,4,4,4,5,4,4,4,_,4,3,_,_,_,2,_,_,_,_,_,3],
    [1,_,_,_,_,_,_,_,_,10,4,_,4,_,_,_,_,_,4,_,4,3,_,_,_,_,_,_,_,_,_,3],
    [1,_,_,_,_,_,_,_,10,_,_,_,4,_,_,_,_,_,4,_,_,_,_,_,_,_,_,_,_,_,_,3],
    [1,_,_,_,_,_,_,_,10,_,4,_,_,_,_,_,_,_,_,_,4,3,3,3,3,3,3,3,3,3,3,3],
    [1,_,_,_,_,_,_,_,10,_,4,_,_,_,_,_,_,_,_,_,4,9,9,9,9,9,9,9,9,9,9,1],
    [1,_,_,_,_,_,_,_,10,_,4,4,4,4,4,_,4,4,4,4,4,9,_,_,_,_,_,_,_,_,9,1],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,3,_,3,9,9,9,9,9,_,_,_,_,_,_,_,_,_,9],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,3,_,3,9,_,_,_,_,_,_,_,_,_,_,_,_,_,9],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,3,_,3,9,9,9,9,_,_,_,_,_,_,_,_,9,_,9],
    [1,_,_,_,_,_,_,_,_,6,6,6,6,6,6,_,6,6,6,6,9,9,9,9,9,9,9,9,_,9,_,9],
    [1,_,_,_,_,_,_,_,_,6,_,_,_,_,_,_,_,_,_,6,7,7,7,7,7,7,7,7,_,7,7,7],
    [1,_,_,_,_,_,_,_,_,6,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,7],
    [1,_,_,_,_,_,_,_,_,6,_,_,_,_,_,_,_,_,_,6,_,_,_,_,_,7,_,_,8,_,_,7],
    [1,_,_,_,_,_,_,_,_,6,_,_,_,_,_,_,_,_,_,6,7,_,_,_,_,7,_,_,8,_,_,7],
    [1,_,_,_,_,_,_,_,_,6,6,6,6,6,6,6,6,6,6,6,7,7,7,_,7,7,_,_,8,_,_,7],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,8,_,_,_,_,_,_,_,_,_,_,8,_,_,_,_,_,7],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,8,_,_,_,_,_,_,_,_,_,_,8,_,_,_,_,_,7],
    [1,_,_,_,_,_,_,_,_,_,_,_,_,_,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7],
    [1]*64
]

class Map:
    def __init__(self, game,map):
        self.game = game
        self.mini_map = map
        self.world_map = {}
        self.rows = len(self.mini_map)
        self.cols = len(self.mini_map[0])
        self.get_map()

    def get_map(self):
        for j, row in enumerate(self.mini_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i, j)] = value

    def draw(self):
        [pg.draw.rect(self.game.DISPLAY, 'darkgray', (pos[0] * 100, pos[1] * 100, 100, 100), 2)
         for pos in self.world_map]